<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add Date" xml:space="preserve">
    <value>Add Date</value>
  </data>
  <data name="Administrative Report" xml:space="preserve">
    <value>The approved administrative report for the last two years</value>
  </data>
  <data name="Arabic Description" xml:space="preserve">
    <value>Arabic Description</value>
  </data>
  <data name="Arabic Extra Details" xml:space="preserve">
    <value>Arabic Extra Details</value>
    <comment>Arabic Extra Details</comment>
  </data>
  <data name="Arabic Name" xml:space="preserve">
    <value>Arabic Name</value>
  </data>
  <data name="Arabic Safety Procedures" xml:space="preserve">
    <value>Arabic Safety Procedures</value>
  </data>
  <data name="Branches Location" xml:space="preserve">
    <value>Branches Location</value>
  </data>
  <data name="City / Area" xml:space="preserve">
    <value>City / Area</value>
    <comment>City / Area</comment>
  </data>
  <data name="Commercial Register" xml:space="preserve">
    <value>Commercial Register</value>
  </data>
  <data name="Confirm Password" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Contact Email" xml:space="preserve">
    <value>Contact Email</value>
  </data>
  <data name="Contact Name" xml:space="preserve">
    <value>Contact Name</value>
  </data>
  <data name="Day work hours" xml:space="preserve">
    <value>Day work hours</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Detailed Address" xml:space="preserve">
    <value>Detailed Address</value>
  </data>
  <data name="Does the employer have work injuries insurance?" xml:space="preserve">
    <value>Does the employer have work injuries insurance?</value>
  </data>
  <data name="Does the operator have health insurance for the employees?" xml:space="preserve">
    <value>Does the operator have health insurance for the employees?</value>
  </data>
  <data name="Economic Sectors" xml:space="preserve">
    <value>Economic Sectors</value>
  </data>
  <data name="Email (Username)" xml:space="preserve">
    <value>Email (Username)</value>
  </data>
  <data name="Establish Year" xml:space="preserve">
    <value>Establish Year</value>
  </data>
  <data name="Extra Details" xml:space="preserve">
    <value>Extra Details</value>
  </data>
  <data name="Field Mandatory" xml:space="preserve">
    <value>Field Mandatory</value>
  </data>
  <data name="Financial Report" xml:space="preserve">
    <value>Audited financial report for the last two years</value>
  </data>
  <data name="Full-Time Female Employees Count" xml:space="preserve">
    <value>Full-Time Employees - Female</value>
  </data>
  <data name="Full-Time Male Employees Count" xml:space="preserve">
    <value>Full-Time Employees - Male</value>
  </data>
  <data name="Host Job Trainees?" xml:space="preserve">
    <value>Is the institution/company on a website to host on-the-job trainees?</value>
  </data>
  <data name="Job Title" xml:space="preserve">
    <value>Job Title</value>
  </data>
  <data name="Logo" xml:space="preserve">
    <value>Logo</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="Mobile 2" xml:space="preserve">
    <value>Mobile 2</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Neighborhood/Village" xml:space="preserve">
    <value>Neighborhood/Village</value>
  </data>
  <data name="Number of branches" xml:space="preserve">
    <value>Number of branches</value>
  </data>
  <data name="Operation Number" xml:space="preserve">
    <value>Operation Number</value>
  </data>
  <data name="Other Attachments" xml:space="preserve">
    <value>Other Attachments</value>
  </data>
  <data name="Other Economic Sectors" xml:space="preserve">
    <value>Other Economic Sectors</value>
  </data>
  <data name="Other Sectors" xml:space="preserve">
    <value>Other Sectors</value>
  </data>
  <data name="Part-Time Femail Employees Count" xml:space="preserve">
    <value>Part-Time Femail Employees Count</value>
  </data>
  <data name="Part-Time Male Employees Count" xml:space="preserve">
    <value>Part-Time Male Employees Count</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Permanent Female Employees Count" xml:space="preserve">
    <value>Permanent Employees Count - Female</value>
  </data>
  <data name="Permanent Male Employees Count" xml:space="preserve">
    <value>Permanent Employes Count - Male</value>
  </data>
  <data name="Province" xml:space="preserve">
    <value>Province</value>
    <comment>Province</comment>
  </data>
  <data name="Registration Certificate" xml:space="preserve">
    <value>Certificate of registration/license</value>
  </data>
  <data name="Registration Number" xml:space="preserve">
    <value>Registration Number</value>
    <comment>Registration Number</comment>
  </data>
  <data name="Required Field" xml:space="preserve">
    <value>Required Field</value>
  </data>
  <data name="Safety Procedures" xml:space="preserve">
    <value>Safety Procedures</value>
  </data>
  <data name="Sector" xml:space="preserve">
    <value>Sector</value>
  </data>
  <data name="Shortcut" xml:space="preserve">
    <value>Shortcut</value>
    <comment>Shortcut</comment>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>Tel</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Week work days" xml:space="preserve">
    <value>Week work days</value>
  </data>
</root>